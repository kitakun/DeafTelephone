syntax = "proto3";

option csharp_namespace = "DeafTelephone.Server";

package logi;

import "google/protobuf/timestamp.proto";

// deaf logger contract
service Logger {
  // test command
  rpc Ping (PingRequest) returns (PongReply);

  // log command
  rpc Log(LogRequest) returns (LogResponse);
  rpc LogException(LogExceptionRequest) returns (LogResponse);

  // group command
  rpc BeginScope(BeginScopeRequest) returns (BeginScopeResponse);

  // bulk
  rpc Bulk(BulkRequest) returns (BulkRespons);
}

// ping-pong-request
message PingRequest { }
message PongReply { }

// log level enum type
enum LogLevel {
	Error = 0;
    Warning = 1;
    Information = 2;
    Debug = 3;
    Verbose = 4;
}

// Log request DTO
message LogRequest {
	string message = 1;
	LogLevel level = 2;
	map<string,string> parameters = 3;
	sint64 ownerScopeId = 4;
	sint64 rootScopeId = 5;
}

// Log response DTO
message LogResponse {
	bool isSuccess = 1;
	string error = 2;
}

// Exception log request DTO
message LogExceptionRequest {
	string message = 1;
	string exceptionTitle = 2;
	string stackTrace = 3;
	map<string,string> parameters = 4;
	sint64 ownerScopeId = 5;
	sint64 rootScopeId = 6;
}

// BeginScope commands
message BeginScopeRequest {
	sint64 ownerScopeId = 1;
	sint64 rootScopeId = 2;
}
message BeginScopeResponse {
	sint64 scopeId = 1;
	string error = 2;
}

// bulk stuff
message BulkMessage {
	sint64 scopeOwnerId = 1;
	string logMessage = 2;
	LogLevel level = 3;

	string exceptionMessage = 4;
	string exceptionStackTrace = 5;

	sint64 rootScopeId = 6;

	google.protobuf.Timestamp createdAt = 7;
}

message BulkRequest {
	repeated BulkMessage messages = 1;
	string cacheKey = 2;
}
message BulkRespons {
	bool isSuccess = 1;
	string error = 2;
	string cacheKey = 3;
}